################################################################################
#                                                                              #
#                         To_do sonda exercice in go                           #
#                                                                              #
################################################################################

########################
#        ROAD MAP      #
########################
1) Parsing
	1.0) read file
	1.1) check elements
	1.2) save elements

2) Resolution
	2.0) set the map and the ship
	2.1) Browse the road
	2.2) Print the result

3) Loop or exit
OK)	if read file is not ended
		continue
	else
		exit
		--> if at least one of road failed
				return an error value (1);
			else
				return success (0);

################################################################################
################################################################################

########################
#      IN PROGRESS     #
########################

2) Resolution
	2.0) set the map and the ship
	2.1) Browse the road
	2.2) Print the result

########################
#          TODO        #
########################

GNL : 	Try to return pointer == manual allocation ??

Print nb course success/total

Allow empty line (white line) && comment line #

BONUS :

manual input
multiple file input
file output
options management
manage comment in map # (cf lem_in)
manage special line in map ## (cf lem_in)
manage collision of ship // cf hashtable ?


########################
#          DONE        #
########################

1) Parsing
1.0) read file
1.1) check elements
1.2) save elements


3) Loop or exit
OK)	if read file is not ended
		continue
	else				// SAVE ERROR VALUE !! For exit with this value
		exit
		--> if at least one of road failed
				return an error value (1);
			else
				return success (0);

Manage error ship one by one
Manage lowercase declaration in map "MLRmlr" && "NSEWnsew"


.
